// Code generated by ent, DO NOT EDIT.

package sitesetting

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the sitesetting type in the database.
	Label = "site_setting"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldKey holds the string denoting the key field in the database.
	FieldKey = "key"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// FieldPublic holds the string denoting the public field in the database.
	FieldPublic = "public"
	// Table holds the table name of the sitesetting in the database.
	Table = "site_settings"
)

// Columns holds all SQL columns for sitesetting fields.
var Columns = []string{
	FieldID,
	FieldKey,
	FieldValue,
	FieldPublic,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultPublic holds the default value on creation for the "public" field.
	DefaultPublic bool
)

// OrderOption defines the ordering options for the SiteSetting queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByKey orders the results by the key field.
func ByKey(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKey, opts...).ToFunc()
}

// ByPublic orders the results by the public field.
func ByPublic(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPublic, opts...).ToFunc()
}
